version: 2.1

orbs:
  telegram: woltsu/telegram@dev:alpha
  orb-tools: circleci/orb-tools@8.27.3

jobs:
  greettest:
    executor: orb-tools/ubuntu
    steps:
      - telegram/greet

  notifytest:
    executor: orb-tools/ubuntu
    steps:
      - telegram/notify:
          message: "Notification test from CircleCI!"

  sendgiftest:
    executor: orb-tools/ubuntu
    steps:
      - telegram/sendgif:
          gif-url: "https://i.redd.it/1dsyzqgv3os21.gif"

  sendphototest:
    executor: orb-tools/ubuntu
    steps:
      - telegram/sendphoto:
          image-url: "https://i.imgur.com/RBmn7VY.jpg"

  sendstickertest:
    executor: orb-tools/ubuntu
    steps:
      - telegram/sendsticker:
          telegram-sticker: "https://raw.githubusercontent.com/TelegramBots/book/master/src/docs/sticker-fred.webp"

  getmetest:
    executor: orb-tools/ubuntu
    steps:
      - telegram/getme

  getchattest:
    executor: orb-tools/ubuntu
    steps:
      - telegram/getchat

integration-dev_filters: &integration-dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

integration-master_filters: &integration-master_filters
  branches:
    ignore: /.*/
  tags:
    only: /master-.*/

prod-deploy_requires: &prod-deploy_requires
  [
    notifytest-master,
    greettest-master,
    notify-job-master,
    sendgiftest-master,
    sendphototest-master,
    sendstickertest-master,
    getmetest-master,
    getchattest-master
  ]

workflows:
  # this `lint-pack_validate_publish-dev` workflow will run on any commit
  lint-pack_validate_publish-dev:
    jobs:
      # lint your destructured orb YAML files
      - orb-tools/lint

      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: woltsu/telegram
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the dev version of your orb
      # an SSH key must be stored in your orb's repository and in CircleCI
      # (add the public key as a read/write key on GitHub; add the private
      # key in CircleCI via SSH Permissions, with github.com as Hostname)
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-dev
          ssh-fingerprints: d4:ca:0b:a5:e0:59:ca:8b:03:c3:c2:48:1c:f6:9c:92
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              ignore: master

      # by default, the 1st job (above) will trigger only integration tests;
      # the 2nd job (below) may also publish a production orb version
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-master
          cleanup-tags: true
          ssh-fingerprints: d4:ca:0b:a5:e0:59:ca:8b:03:c3:c2:48:1c:f6:9c:92
          tag: master
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              only: master

  integration-tests_prod-release:
    jobs:
      # triggered by non-master branch commits
      - greettest:
          name: greettest-dev
          filters: *integration-dev_filters

      - notifytest:
          name: notifytest-dev
          filters: *integration-dev_filters

      - sendgiftest:
          name: sendgiftest-dev
          filters: *integration-dev_filters

      - sendphototest:
          name: sendphototest-dev
          filters: *integration-dev_filters

      - sendstickertest:
          name: sendstickertest-dev
          filters: *integration-dev_filters

      - getmetest:
          name: getmetest-dev
          filters: *integration-dev_filters

      - getchattest:
          name: getchattest-dev
          filters: *integration-dev_filters

      - telegram/notify:
          name: notify-job-dev
          filters: *integration-dev_filters
          message: Telegram notify job message!

      # triggered by master branch commits
      - greettest:
          name: greettest-master
          filters: *integration-master_filters

      - notifytest:
          name: notifytest-master
          filters: *integration-master_filters

      - sendgiftest:
          name: sendgiftest-master
          filters: *integration-master_filters

      - sendphototest:
          name: sendphototest-master
          filters: *integration-master_filters

      - sendstickertest:
          name: sendstickertest-master
          filters: *integration-master_filters

      - getmetest:
          name: getmetest-master
          filters: *integration-master_filters

      - getchattest:
          name: getchattest-master
          filters: *integration-master_filters

      - telegram/notify:
          name: notify-job-master
          filters: *integration-master_filters
          message: Telegram notify job message!

      - orb-tools/dev-promote-prod:
          name: dev-promote-patch
          orb-name: woltsu/telegram
          ssh-fingerprints: d4:ca:0b:a5:e0:59:ca:8b:03:c3:c2:48:1c:f6:9c:92
          cleanup-tags: true
          requires: *prod-deploy_requires
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-patch.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-minor
          release: minor
          orb-name: woltsu/telegram
          ssh-fingerprints: d4:ca:0b:a5:e0:59:ca:8b:03:c3:c2:48:1c:f6:9c:92
          cleanup-tags: true
          requires: *prod-deploy_requires
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-minor.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-major
          release: major
          orb-name: woltsu/telegram
          ssh-fingerprints: d4:ca:0b:a5:e0:59:ca:8b:03:c3:c2:48:1c:f6:9c:92
          cleanup-tags: true
          requires: *prod-deploy_requires
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-major.*/
